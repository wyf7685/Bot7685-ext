name: Build Wheels

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check_version:
    runs-on: ubuntu-latest
    name: Check version matches tag
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Get Version
        id: version
        run: |
          echo "VERSION=$(uv version --short)" >> $GITHUB_OUTPUT
          echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Check Version
        if: steps.version.outputs.VERSION != steps.version.outputs.TAG_VERSION
        run: exit 1

  wheels:
    name: Build wheels (${{ matrix.platform.os }} / ${{ matrix.platform.target }})
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform:
          - os: linux
            runs-on: ubuntu-22.04
            target: x86_64
          - os: linux
            runs-on: ubuntu-22.04
            target: aarch64
          - os: windows
            runs-on: windows-2022
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.os }}-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [check_version, wheels, sdist]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    permissions:
      id-token: write # required for OIDC trusted publisher
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Publish to PyPI
        run: uv publish --trusted-publishing always
